<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Target Name="GenerateSemanticVersion" BeforeTargets="InsertSemanticVersion">
        <!--
        Make an effort to request the semantic version string from Git. Ignore errors.
        -->
        <Exec ConsoleToMsBuild="true" IgnoreExitCode="true" Command="git describe --always --dirty">
            <Output TaskParameter="ConsoleOutput" PropertyName="SemanticVersion"/>
            <Output TaskParameter="ExitCode" PropertyName="GitError"/>
        </Exec>
        <!--
        The property $(SemanticVersion) contains the output (stdout) from the Git command above. If
        there was an error (e.g., Git not installed, code isn't inside a Git repository) then clear
        the error text from the property.        
        -->
        <PropertyGroup Condition="'$(GitError)'!='0'">
            <SemanticVersion></SemanticVersion>
        </PropertyGroup>
        <!--
        Write version string to a file so that the library will still report a version in case e.g.
        someone builds from a zipped archive rather than cloning our Git repo.
        -->
        <WriteLinesToFile Condition="'$(GitError)'=='0'" File="version.txt" Overwrite="true" Encoding="Unicode" Lines="$(SemanticVersion)"/>
    </Target>

    <Target Name="InsertSemanticVersion" BeforeTargets="ClCompile">
        <!--
        If the property $(SemanticVersion) isn't already set, read it in from a file.
        -->
        <ReadLinesFromFile Condition="'$(SemanticVersion)'==''" File="version.txt">
            <Output TaskParameter="Lines" PropertyName="SemanticVersion"/>
        </ReadLinesFromFile>
        
        <!--
        If we have a non-empty version string, then add it to the build as a C macro.
        -->
        <ItemGroup Condition="'$(SemanticVersion)'!=''">
            <ClCompile>
                <AdditionalOptions>/DEHC_VERSION=$(SemanticVersion) %(ClCompile.AdditionalOptions)</AdditionalOptions>
            </ClCompile>
        </ItemGroup>
    </Target>

</Project>
